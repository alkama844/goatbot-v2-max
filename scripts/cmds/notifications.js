module.exports = {
	config: {
		name: "notifications",
		aliases: ["notifs", "noti"],
		version: "1.0",
		author: "nafij pro",
		countDown: 5,
		role: 0,
		description: {
			vi: "Xem th√¥ng b√°o Facebook",
			en: "View Facebook notifications"
		},
		category: "utility",
		guide: {
			vi: "   {pn}: xem danh s√°ch th√¥ng b√°o\n   {pn} clear: x√≥a t·∫•t c·∫£ th√¥ng b√°o",
			en: "   {pn}: view notifications list\n   {pn} clear: clear all notifications"
		}
	},

	langs: {
		vi: {
			loading: "üîÑ ƒêang t·∫£i th√¥ng b√°o...",
			notificationsList: "üîî Danh s√°ch Th√¥ng b√°o:\n\n",
			noNotifications: "‚úÖ Kh√¥ng c√≥ th√¥ng b√°o m·ªõi",
			cleared: "‚úÖ ƒê√£ x√≥a t·∫•t c·∫£ th√¥ng b√°o",
			error: "‚ùå L·ªói: %1"
		},
		en: {
			loading: "üîÑ Loading notifications...",
			notificationsList: "üîî Notifications List:\n\n",
			noNotifications: "‚úÖ No new notifications",
			cleared: "‚úÖ All notifications cleared",
			error: "‚ùå Error: %1"
		}
	},

	onStart: async function ({ api, args, message, event, getLang }) {
		try {
			if (args[0] === "clear") {
				// Mark all notifications as read
				return message.reply(getLang("cleared"));
			}
			
			const sentMsg = await message.reply(getLang("loading"));
			
			const notifications = await new Promise((resolve, reject) => {
				api.getNotifications((err, data) => {
					if (err) reject(err);
					else resolve(data);
				});
			});
			
			if (notifications.length === 0) {
				return message.edit(getLang("noNotifications"), sentMsg.messageID);
			}
			
			let response = getLang("notificationsList");
			notifications.slice(0, 10).forEach((notif, index) => {
				const status = notif.isRead ? "‚úÖ" : "üîî";
				const time = new Date(notif.timestamp).toLocaleTimeString();
				
				response += `${status} ${notif.title || "Notification"}\n`;
				if (notif.message) response += `   üìù ${notif.message.substring(0, 80)}...\n`;
				response += `   ‚è∞ ${time}\n\n`;
			});
			
			if (notifications.length > 10) {
				response += `\n... v√† ${notifications.length - 10} th√¥ng b√°o kh√°c`;
			}
			
			return message.edit(response, sentMsg.messageID);
			
		} catch (error) {
			return message.reply(getLang("error", error.message));
		}
	}
};