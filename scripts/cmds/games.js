module.exports = {
	config: {
		name: "games",
		version: "1.0",
		author: "nafij pro",
		countDown: 5,
		role: 0,
		description: {
			vi: "Xem danh s√°ch games Facebook",
			en: "View Facebook games list"
		},
		category: "entertainment",
		guide: {
			vi: "   {pn}: xem danh s√°ch games\n   {pn} <game_id>: xem chi ti·∫øt game",
			en: "   {pn}: view games list\n   {pn} <game_id>: view game details"
		}
	},

	langs: {
		vi: {
			loading: "üîÑ ƒêang t·∫£i danh s√°ch games...",
			gamesList: "üéÆ Danh s√°ch Games Facebook:\n\n",
			noGames: "‚ùå Kh√¥ng t√¨m th·∫•y game n√†o",
			gameDetails: "üéÆ Chi ti·∫øt Game:\n\nüè∑Ô∏è T√™n: %1\nüìù M√¥ t·∫£: %2\nüìÇ Danh m·ª•c: %3\nüéØ ƒê√£ c√†i: %4\nüé≤ L∆∞·ª£t ch∆°i: %5",
			error: "‚ùå L·ªói: %1"
		},
		en: {
			loading: "üîÑ Loading games list...",
			gamesList: "üéÆ Facebook Games List:\n\n",
			noGames: "‚ùå No games found",
			gameDetails: "üéÆ Game Details:\n\nüè∑Ô∏è Name: %1\nüìù Description: %2\nüìÇ Category: %3\nüéØ Installed: %4\nüé≤ Play count: %5",
			error: "‚ùå Error: %1"
		}
	},

	onStart: async function ({ api, args, message, event, getLang }) {
		try {
			const sentMsg = await message.reply(getLang("loading"));
			
			const games = await new Promise((resolve, reject) => {
				api.getGameList((err, data) => {
					if (err) reject(err);
					else resolve(data);
				});
			});
			
			if (games.length === 0) {
				return message.edit(getLang("noGames"), sentMsg.messageID);
			}
			
			const gameID = args[0];
			if (gameID) {
				const game = games.find(g => g.gameID === gameID);
				if (!game) {
					return message.edit("‚ùå Game not found", sentMsg.messageID);
				}
				
				const response = getLang("gameDetails",
					game.name,
					game.description || "No description",
					game.category || "Unknown",
					game.isInstalled ? "Yes" : "No",
					game.playCount || "Unknown"
				);
				
				return message.edit(response, sentMsg.messageID);
			}
			
			let response = getLang("gamesList");
			games.slice(0, 10).forEach((game, index) => {
				response += `${index + 1}. ${game.name}\n`;
				response += `   üÜî ${game.gameID}\n`;
				response += `   üìÇ ${game.category || "Unknown"}\n`;
				response += `   ${game.isInstalled ? "‚úÖ Installed" : "‚ùå Not installed"}\n\n`;
			});
			
			if (games.length > 10) {
				response += `\n... v√† ${games.length - 10} games kh√°c`;
			}
			
			return message.edit(response, sentMsg.messageID);
			
		} catch (error) {
			return message.reply(getLang("error", error.message));
		}
	}
};